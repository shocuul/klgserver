<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>Kaos Latin Servers</title>

    <meta name="description" content="">

    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->
    <!-- Icon -->
    <link rel="icon" type="image/png" href="/images/icon.png">

    <!-- Google Fonts -->
    <link href='http://fonts.googleapis.com/css?family=Lato:300,400,700' rel='stylesheet' type='text/css'>


    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/font-awesome.min.css">
    <link rel="stylesheet" href="/styles/settings.css">
    <link rel="stylesheet" href="/styles/youplay.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/owl.carousel.css">
    <link rel="stylesheet" href="/styles/styles.css">

    <!--STYLES
    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/font-awesome.min.css">
    <link rel="stylesheet" href="/styles/settings.css">
    <link rel="stylesheet" href="/styles/youplay.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <link rel="stylesheet" href="/styles/owl.carousel.css">
    <link rel="stylesheet" href="/styles/styles.css">
    <!STYLES END-->

    <!-- Google Fonts -->
    <link href='http://fonts.googleapis.com/css?family=Lato:300,400,700' rel='stylesheet' type='text/css'>
    <!-- <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=RobotoDraft:300,400,500,700,400italic"> -->
  </head>

  <body>

		<%- body %>

    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.

      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:

          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->


    <!--Angular 2 Scripts

    <script src="node_modules/es6-shim/es6-shim.min.js"></script>
    <script src="node_modules/systemjs/dist/system-polyfills.js"></script>

    <script src="node_modules/angular2/bundles/angular2-polyfills.js"></script>
    <script src="node_modules/systemjs/dist/system.src.js"></script>
    <script src="node_modules/rxjs/bundles/Rx.js"></script>
    <script src="node_modules/angular2/bundles/angular2.dev.js"></script>
    -->

    <!-- 1. Load libraries -->
     <!-- Polyfill(s) for older browsers -->
    <script src="node_modules/core-js/client/shim.min.js"></script>
    <script src="node_modules/zone.js/dist/zone.min.js"></script>
    <script src="node_modules/reflect-metadata/Reflect.js"></script>
    <script src="node_modules/systemjs/dist/system.src.js"></script>

    <!-- 2. Configure SystemJS -->
    <script>
    /**
 * System configuration for Angular 2 samples
 * Adjust as necessary for your application needs.
 */
(function(global) {
  // map tells the System loader where to look for things
  var map = {
    'app':                        'app', // 'dist',
    '@angular':                   'node_modules/@angular',
    'angular2-in-memory-web-api': 'node_modules/angular2-in-memory-web-api',
    'rxjs':                       'node_modules/rxjs',
    'angular2-jwt':               'node_modules/angular2-jwt'
  };
  // packages tells the System loader how to load when no filename and/or no extension
  var packages = {
    'app':                        { main: 'main.js',  defaultExtension: 'js' },
    'rxjs':                       { defaultExtension: 'js' },
    'angular2-in-memory-web-api': { defaultExtension: 'js' },
  };
  var ngPackageNames = [
    'common',
    'compiler',
    'core',
    'http',
    'platform-browser',
    'platform-browser-dynamic',
    'router',
    'router-deprecated',
    'upgrade',
  ];
  // Add package entries for angular packages
  ngPackageNames.forEach(function(pkgName) {
    packages['@angular/'+pkgName] = { main: pkgName + '.umd.js', defaultExtension: 'js' };
  });
  var config = {
    map: map,
    packages: packages
  }
  System.config(config);
})(this);
    </script>
    <script>
      System.import('app').catch(function(err){ console.error(err); });
    </script>
    <!--
    <script>
    System.config({
              map: {
                  rxjs: 'node_modules/rxjs' // added this map section
              },
              packages: {
                  app: {
                      format: 'register',
                      defaultExtension: 'js'
                  },
                  'rxjs': {defaultExtension: 'js'} // and added this to packages
              }
          });
    System.import('app').catch(function(err){ console.error(err); });
    </script>

    <!--
    <script src="/js/dependencies/sails.io.js"></script>
    <script src="/js/dependencies/jquery.min.js"></script>
    <script src="/js/dependencies/bootstrap.min.js"></script>
    <script src="/js/dependencies/skrollr.min.js"></script>
    <script src="/js/dependencies/jquery.themepunch.tools.min.js"></script>
    <script src="/js/dependencies/jquery.themepunch.revolution.min.js"></script>
    <script src="/js/dependencies/owl.carousel.min.js"></script>
    <script src="/js/dependencies/angular.min.js"></script>
    <script src="/js/dependencies/angular-sails.min.js"></script>
    <script src="/js/dependencies/angular-ui-router.js"></script>
    <script src="/js/dependencies/angular-animate.min.js"></script>
    <script src="/js/dependencies/angular-aria.min.js"></script>
    <script src="/js/dependencies/angular-messages.js"></script>
    <script src="/js/dependencies/ng-file-upload-all.min.js"></script>
    <script src="/js/dependencies/ui-bootstrap.min.js"></script>
    <script src="/js/app.js"></script>
    <script src="/js/routes.js"></script>
    <script src="/js/Auth/Auth.js"></script>
    <script src="/js/Auth/RegisterCtrl.js"></script>
    <script src="/js/Auth/loginCtrl.js"></script>
    <script src="/js/Auth/navCtrl.js"></script>
    <script src="/js/Directives/klg-focus.js"></script>
    <script src="/js/Directives/you-carrusel.js"></script>
    <script src="/js/Directives/you-slider.js"></script>
    <script src="/js/Home/homeCtrl.js"></script>
    <script src="/js/Modals/modals.js"></script>
    <script src="/js/ServerPanel/ServerService.js"></script>
    <script src="/js/ServerPanel/serverPanelCtrl.js"></script>
    <script src="/js/Shared/accessLevels.js"></script>
    <script src="/js/Shared/currentUser.js"></script>
    <script src="/js/Shared/localStorage.js"></script>
    <script src="/js/Shared/serverRepository.js"></script>
    <script src="/js/Shared/youplayService.js"></script>
    <script src="/js/User/dashboardCtrl.js"></script>
    <!SCRIPTS END-->

    <!--
          Client-side Templates
          ========================

          HTML templates are important prerequisites of modern, rich client applications.
          To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
          that you load these templates client-side.

          By default, your Gruntfile is configured to automatically load and precompile
          client-side JST templates in your `assets/linker/templates` folder, then
          include them here automatically (between TEMPLATES and TEMPLATES END).

          To customize this behavior to fit your needs, just edit your Gruntfile.
          For example, here are a few things you could do:

              + Import templates from other directories
              + Use a different template engine (handlebars, jade, dust, etc.)
              + Internationalize your client-side templates using a server-side
                stringfile before they're served.
      -->

    <!--TEMPLATES>
    <script type="text/javascript" src="/templates.js"></script>
    <!TEMPLATES END-->

    <script src="/js/dependencies/jquery.min.js"></script>
    <script src="/js/dependencies/bootstrap.min.js"></script>
  </body>
</html>
